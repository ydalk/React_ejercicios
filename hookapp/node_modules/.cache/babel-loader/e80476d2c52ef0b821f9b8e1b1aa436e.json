{"ast":null,"code":"export const todoReducer = (initialState, action) => {\n  switch (action.type) {\n    case 'Add todo':\n      //opcion para usar en caso de no tener una implemetacion definda y probar el código\n      //throw new Error('Action.type = ABC no esta implementada');\n      return [...initialState, action.payload];\n\n    case 'Remove todo':\n      //el filter genera un nuevo array por esta razón lo puedo usar en el reducer\n      //le pido que filtre y devuelva la lista de objetos del array menos el id que enviaré a través del payload\n      return initialState.filter(todo => todo.id !== action.payload);\n\n    default:\n      return initialState;\n  }\n};","map":{"version":3,"names":["todoReducer","initialState","action","type","payload","filter","todo","id"],"sources":["/home/carolina/Documents/doc_caro/Udemy/React-ejercicios/hookapp/src/08useReducer/todoReducer.js"],"sourcesContent":["export const todoReducer = (initialState, action)=>{\n\n    switch( action.type){\n        case 'Add todo':\n            //opcion para usar en caso de no tener una implemetacion definda y probar el código\n            //throw new Error('Action.type = ABC no esta implementada');\n            return[...initialState, action.payload ]\n        case 'Remove todo':\n            //el filter genera un nuevo array por esta razón lo puedo usar en el reducer\n            //le pido que filtre y devuelva la lista de objetos del array menos el id que enviaré a través del payload\n            return initialState.filter( todo => todo.id !== action.payload);\n        default:\n            return initialState;\n    }\n}"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,CAACC,YAAD,EAAeC,MAAf,KAAwB;EAE/C,QAAQA,MAAM,CAACC,IAAf;IACI,KAAK,UAAL;MACI;MACA;MACA,OAAM,CAAC,GAAGF,YAAJ,EAAkBC,MAAM,CAACE,OAAzB,CAAN;;IACJ,KAAK,aAAL;MACI;MACA;MACA,OAAOH,YAAY,CAACI,MAAb,CAAqBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACE,OAAhD,CAAP;;IACJ;MACI,OAAOH,YAAP;EAVR;AAYH,CAdM"},"metadata":{},"sourceType":"module"}