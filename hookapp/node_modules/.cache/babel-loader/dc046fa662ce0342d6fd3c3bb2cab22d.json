{"ast":null,"code":"var _jsxFileName = \"/home/carolina/Documents/doc_caro/Udemy/React-ejercicios/hookapp/src/03Example/MultipleCustomHook.jsx\",\n    _s = $RefreshSig$();\n\n//desestructuro desde el archivo de barril creado en la carpeta hooks\nimport { useFetch, useCounter } from \"../hooks\";\nimport { LoadingQuote } from \"./LoadingQuote\";\nimport { Quote } from \"./Quote\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MultipleCustomHook = () => {\n  _s();\n\n  //para usar otro hook, lo importo y desestructuro los valores que requiero \n  const {\n    counter,\n    increment,\n    decrement\n  } = useCounter(1);\n  const {\n    data,\n    isLoading,\n    error\n  } = useFetch(`https://www.breakingbadapi.com/api/quotes/${counter}`); //  !!data valida si el valor de data es true va a ejecutar lo indicado después del && en este caso trae la data en la posición [0]\n  //  de esta forma puedo desestructurar los valores para llamarlos en el componente\n\n  const {\n    author,\n    quote\n  } = !!data && data[0];\n  console.log(data, isLoading, error);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Breaking Bad Quotes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(LoadingQuote, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(Quote, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 41\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      disabled: isLoading,\n      onClick: decrement,\n      children: \"Prev quote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      disabled: isLoading,\n      onClick: () => {\n        increment();\n      },\n      children: \"Next quote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MultipleCustomHook, \"52cNPuK1PCLOHiEbOyIAfsnwR00=\", false, function () {\n  return [useCounter, useFetch];\n});\n\n_c = MultipleCustomHook;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultipleCustomHook\");","map":{"version":3,"names":["useFetch","useCounter","LoadingQuote","Quote","MultipleCustomHook","counter","increment","decrement","data","isLoading","error","author","quote","console","log"],"sources":["/home/carolina/Documents/doc_caro/Udemy/React-ejercicios/hookapp/src/03Example/MultipleCustomHook.jsx"],"sourcesContent":["//desestructuro desde el archivo de barril creado en la carpeta hooks\nimport { useFetch, useCounter } from \"../hooks\"\nimport { LoadingQuote } from \"./LoadingQuote\";\nimport { Quote } from \"./Quote\";\n\nexport const MultipleCustomHook = () => {\n\n    //para usar otro hook, lo importo y desestructuro los valores que requiero \n    const {counter, increment, decrement } = useCounter(1);\n\n    const { data, isLoading, error} = useFetch(`https://www.breakingbadapi.com/api/quotes/${ counter }`);\n    //  !!data valida si el valor de data es true va a ejecutar lo indicado después del && en este caso trae la data en la posición [0]\n    //  de esta forma puedo desestructurar los valores para llamarlos en el componente\n    const {author, quote} = !!data && data[0]; \n\n    console.log(data, isLoading, error);\n\n    \n\n  return (\n    <>\n        <h1>Breaking Bad Quotes</h1>\n        <hr />\n\n        {\n          isLoading ? <LoadingQuote/> : <Quote />\n        }\n        {/* a través del evento del boton utilizo la función requerida del hook a utilizar */}\n      <button \n        className=\"btn btn-primary\" \n        disabled ={isLoading}\n        onClick={decrement}\n      >Prev quote\n      </button>\n      <button \n        className=\"btn btn-primary\" \n        disabled ={isLoading}\n        onClick={ ()=> {increment()}}\n      >Next quote\n      </button>\n    </>\n  )\n}\n"],"mappings":";;;AAAA;AACA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,UAArC;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,KAAT,QAAsB,SAAtB;;;AAEA,OAAO,MAAMC,kBAAkB,GAAG,MAAM;EAAA;;EAEpC;EACA,MAAM;IAACC,OAAD;IAAUC,SAAV;IAAqBC;EAArB,IAAmCN,UAAU,CAAC,CAAD,CAAnD;EAEA,MAAM;IAAEO,IAAF;IAAQC,SAAR;IAAmBC;EAAnB,IAA4BV,QAAQ,CAAE,6CAA6CK,OAAS,EAAxD,CAA1C,CALoC,CAMpC;EACA;;EACA,MAAM;IAACM,MAAD;IAASC;EAAT,IAAkB,CAAC,CAACJ,IAAF,IAAUA,IAAI,CAAC,CAAD,CAAtC;EAEAK,OAAO,CAACC,GAAR,CAAYN,IAAZ,EAAkBC,SAAlB,EAA6BC,KAA7B;EAIF,oBACE;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA;MAAA;MAAA;IAAA,QAFJ,EAKMD,SAAS,gBAAG,QAAC,YAAD;MAAA;MAAA;MAAA;IAAA,QAAH,gBAAqB,QAAC,KAAD;MAAA;MAAA;MAAA;IAAA,QALpC,eAQE;MACE,SAAS,EAAC,iBADZ;MAEE,QAAQ,EAAGA,SAFb;MAGE,OAAO,EAAEF,SAHX;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QARF,eAcE;MACE,SAAS,EAAC,iBADZ;MAEE,QAAQ,EAAGE,SAFb;MAGE,OAAO,EAAG,MAAK;QAACH,SAAS;MAAG,CAH9B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAdF;EAAA,gBADF;AAuBD,CArCM;;GAAMF,kB;UAGgCH,U,EAEPD,Q;;;KALzBI,kB"},"metadata":{},"sourceType":"module"}