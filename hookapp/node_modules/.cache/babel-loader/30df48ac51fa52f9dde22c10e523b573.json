{"ast":null,"code":"var _jsxFileName = \"/home/carolina/Documents/doc_caro/Udemy/React-ejercicios/hookapp/src/02useEffect/SimpleForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SimpleForm = () => {\n  _s();\n\n  const [formState, setFormState] = useState({\n    username: 'ydalk',\n    email: 'carolina@mail.com'\n  });\n  const {\n    username,\n    email\n  } = formState;\n\n  const onInputChange = _ref => {\n    let {\n      target\n    } = _ref;\n    const {\n      name,\n      value\n    } = target;\n    setFormState({ ...formState,\n      // propiedades computadas de los objetos se colocan en llaves [] asignando el valor que va a tomar\n      [name]: value\n    });\n  }; // el primer argumento que recibe un callback que determina la función que se va a ejecutar cada vez que se llame\n  // el segundo es un arreglo de dependencias, es la condición por la que se debe disparar\n  // si esta vacio, se disparará una sola vez al montarse\n\n\n  useEffect(() => {\n    console.log('formState cambió');\n  }, []); // se recomienda hacer un useEffect por cada acción que se quiera llamar\n  // si colocamos un argumento en el arreglo de dependencias se disparará el useEffect cada vez que esta propiedad cambie\n\n  useEffect(() => {\n    console.log('formState cambió');\n  }, [formState]);\n  useEffect(() => {\n    console.log('email cambió');\n  }, [email]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Formulario Simple \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Username\",\n      name: \"username\",\n      value: username,\n      onChange: onInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      className: \"form-control mt-2\",\n      placeholder: \"carolina@mail.com\",\n      name: \"email\",\n      value: email,\n      onChange: onInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SimpleForm, \"P412z7XzC4BvV82gOEyk8sWonvg=\");\n\n_c = SimpleForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleForm\");","map":{"version":3,"names":["React","useEffect","useState","SimpleForm","formState","setFormState","username","email","onInputChange","target","name","value","console","log"],"sources":["/home/carolina/Documents/doc_caro/Udemy/React-ejercicios/hookapp/src/02useEffect/SimpleForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\n\nexport const SimpleForm = () => {\n\n    const [formState, setFormState] = useState({\n        username: 'ydalk',\n        email: 'carolina@mail.com'\n    });\n\n    const {username, email} = formState; \n\n\n    const onInputChange = ({target}) =>{\n        const {name, value} = target;\n        setFormState({\n            ...formState,\n            // propiedades computadas de los objetos se colocan en llaves [] asignando el valor que va a tomar\n            [ name ]: value\n        })\n    }\n\n    // el primer argumento que recibe un callback que determina la función que se va a ejecutar cada vez que se llame\n    // el segundo es un arreglo de dependencias, es la condición por la que se debe disparar\n    // si esta vacio, se disparará una sola vez al montarse\n    useEffect( () =>{\n        console.log('formState cambió');\n    }, []);\n    \n    // se recomienda hacer un useEffect por cada acción que se quiera llamar\n    // si colocamos un argumento en el arreglo de dependencias se disparará el useEffect cada vez que esta propiedad cambie\n    useEffect( () =>{\n        console.log('formState cambió');\n    }, [formState]);\n\n    useEffect( () =>{\n        console.log('email cambió');\n    }, [email]);\n\n  return (\n   <>\n    <h1> Formulario Simple </h1>\n    <hr />\n\n    <input \n        type='text'\n        className='form-control'\n        placeholder='Username'\n        name= 'username'\n        value={username}\n        onChange = { onInputChange }\n    />\n    <input \n        type='email'\n        className='form-control mt-2'\n        placeholder='carolina@mail.com'\n        name='email'\n        value={email}\n        onChange= { onInputChange }\n    />\n   </>\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;EAAA;;EAE5B,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC;IACvCI,QAAQ,EAAE,OAD6B;IAEvCC,KAAK,EAAE;EAFgC,CAAD,CAA1C;EAKA,MAAM;IAACD,QAAD;IAAWC;EAAX,IAAoBH,SAA1B;;EAGA,MAAMI,aAAa,GAAG,QAAa;IAAA,IAAZ;MAACC;IAAD,CAAY;IAC/B,MAAM;MAACC,IAAD;MAAOC;IAAP,IAAgBF,MAAtB;IACAJ,YAAY,CAAC,EACT,GAAGD,SADM;MAET;MACA,CAAEM,IAAF,GAAUC;IAHD,CAAD,CAAZ;EAKH,CAPD,CAV4B,CAmB5B;EACA;EACA;;;EACAV,SAAS,CAAE,MAAK;IACZW,OAAO,CAACC,GAAR,CAAY,kBAAZ;EACH,CAFQ,EAEN,EAFM,CAAT,CAtB4B,CA0B5B;EACA;;EACAZ,SAAS,CAAE,MAAK;IACZW,OAAO,CAACC,GAAR,CAAY,kBAAZ;EACH,CAFQ,EAEN,CAACT,SAAD,CAFM,CAAT;EAIAH,SAAS,CAAE,MAAK;IACZW,OAAO,CAACC,GAAR,CAAY,cAAZ;EACH,CAFQ,EAEN,CAACN,KAAD,CAFM,CAAT;EAIF,oBACC;IAAA,wBACC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADD,eAEC;MAAA;MAAA;MAAA;IAAA,QAFD,eAIC;MACI,IAAI,EAAC,MADT;MAEI,SAAS,EAAC,cAFd;MAGI,WAAW,EAAC,UAHhB;MAII,IAAI,EAAE,UAJV;MAKI,KAAK,EAAED,QALX;MAMI,QAAQ,EAAKE;IANjB;MAAA;MAAA;MAAA;IAAA,QAJD,eAYC;MACI,IAAI,EAAC,OADT;MAEI,SAAS,EAAC,mBAFd;MAGI,WAAW,EAAC,mBAHhB;MAII,IAAI,EAAC,OAJT;MAKI,KAAK,EAAED,KALX;MAMI,QAAQ,EAAIC;IANhB;MAAA;MAAA;MAAA;IAAA,QAZD;EAAA,gBADD;AAuBD,CA3DM;;GAAML,U;;KAAAA,U"},"metadata":{},"sourceType":"module"}