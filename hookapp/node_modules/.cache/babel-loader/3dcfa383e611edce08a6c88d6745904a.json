{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nexport const useForm = function () {\n  _s();\n\n  let initiaForm = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const [formState, setFormState] = useState(initiaForm);\n\n  const onInputChange = _ref => {\n    let {\n      target\n    } = _ref;\n    const {\n      name,\n      value\n    } = target;\n    setFormState({ ...formState,\n      // propiedades computadas de los objetos se colocan en llaves [] asignando el valor que va a tomar\n      [name]: value\n    });\n  };\n\n  return {\n    formState,\n    onInputChange\n  };\n};\n\n_s(useForm, \"4PFlUms6DKz5mETkf3b+bZLWzN0=\");","map":{"version":3,"names":["useState","useForm","initiaForm","formState","setFormState","onInputChange","target","name","value"],"sources":["/home/carolina/Documents/doc_caro/Udemy/React-ejercicios/hookapp/src/hooks/useForm.js"],"sourcesContent":["import { useState } from \"react\";\n\nexport const useForm = (initiaForm = {}) => {\n\n    const [formState, setFormState] = useState(initiaForm);\n\n    \n    const onInputChange = ({target}) =>{\n        const {name, value} = target;\n        setFormState({\n            ...formState,\n            // propiedades computadas de los objetos se colocan en llaves [] asignando el valor que va a tomar\n            [ name ]: value\n        })\n    }\n\n  return {\n   formState,\n   onInputChange,\n  }\n}\n"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAO,MAAMC,OAAO,GAAG,YAAqB;EAAA;;EAAA,IAApBC,UAAoB,uEAAP,EAAO;EAExC,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAACE,UAAD,CAA1C;;EAGA,MAAMG,aAAa,GAAG,QAAa;IAAA,IAAZ;MAACC;IAAD,CAAY;IAC/B,MAAM;MAACC,IAAD;MAAOC;IAAP,IAAgBF,MAAtB;IACAF,YAAY,CAAC,EACT,GAAGD,SADM;MAET;MACA,CAAEI,IAAF,GAAUC;IAHD,CAAD,CAAZ;EAKH,CAPD;;EASF,OAAO;IACNL,SADM;IAENE;EAFM,CAAP;AAID,CAlBM;;GAAMJ,O"},"metadata":{},"sourceType":"module"}