{"ast":null,"code":"var _jsxFileName = \"/home/carolina/Documents/doc_caro/Udemy/React-ejercicios/hookapp/src/06memos/CallbackHook.jsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState } from 'react';\nimport { ShowIncrement } from './ShowIncrement';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CallbackHook = () => {\n  _s();\n\n  const [counter, setCounter] = useState(10); //sirve para memorizar funciones que se ejecutaran en función de la dependencia\n\n  const increment = useCallback(() => {\n    //dentro de los set tambien puedo llamar un callbakc y asignarle el valor actual del couter y modificarlo\n    setCounter(value => value + 1);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" use Callback Hook: \", counter, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ShowIncrement, {\n      increment: increment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CallbackHook, \"FjiU8fbTztkOBnVptyJjH0DKlCs=\");\n\n_c = CallbackHook;\n\nvar _c;\n\n$RefreshReg$(_c, \"CallbackHook\");","map":{"version":3,"names":["useCallback","useState","ShowIncrement","CallbackHook","counter","setCounter","increment","value"],"sources":["/home/carolina/Documents/doc_caro/Udemy/React-ejercicios/hookapp/src/06memos/CallbackHook.jsx"],"sourcesContent":["import { useCallback, useState } from 'react'\nimport { ShowIncrement } from './ShowIncrement'\n\nexport const CallbackHook = () => {\n\n  const [counter, setCounter]= useState(10);\n\n  //sirve para memorizar funciones que se ejecutaran en función de la dependencia\n  const increment = useCallback(\n    () => {\n        //dentro de los set tambien puedo llamar un callbakc y asignarle el valor actual del couter y modificarlo\n        setCounter((value)=> value + 1)\n    },\n    [],\n  )\n  \n   \n    return (\n    <>\n        <h1> use Callback Hook: { counter } </h1>\n        <hr/>\n\n        <ShowIncrement increment={increment}/>\n\n    </>\n  )\n}\n"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AACA,SAASC,aAAT,QAA8B,iBAA9B;;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;EAAA;;EAEhC,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAuBJ,QAAQ,CAAC,EAAD,CAArC,CAFgC,CAIhC;;EACA,MAAMK,SAAS,GAAGN,WAAW,CAC3B,MAAM;IACF;IACAK,UAAU,CAAEE,KAAD,IAAUA,KAAK,GAAG,CAAnB,CAAV;EACH,CAJ0B,EAK3B,EAL2B,CAA7B;EASE,oBACA;IAAA,wBACI;MAAA,mCAA0BH,OAA1B;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA;MAAA;MAAA;IAAA,QAFJ,eAII,QAAC,aAAD;MAAe,SAAS,EAAEE;IAA1B;MAAA;MAAA;MAAA;IAAA,QAJJ;EAAA,gBADA;AASH,CAvBM;;GAAMH,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}