{"ast":null,"code":"//estado inicial de la aplicacion\nconst initialState = [{\n  id: 1,\n  todo: 'Reolectar la piedra del alma',\n  done: false\n}]; //funcion pura que recibe un estado inicial y una acción, debe retornar siempre un nuevo estado\n\nconst todoReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  return state;\n};\n\nlet todos = todoReducer();\nconst newtodo = {\n  id: 2,\n  todo: 'Reolectar la piedra del poder',\n  done: false\n};\nconsole.log(todos);","map":{"version":3,"names":["initialState","id","todo","done","todoReducer","state","action","todos","newtodo","console","log"],"sources":["/home/carolina/Documents/doc_caro/Udemy/React-ejercicios/hookapp/src/08useReducer/introReducer.js"],"sourcesContent":["//estado inicial de la aplicacion\nconst initialState = [{\n    id: 1,\n    todo: 'Reolectar la piedra del alma',\n    done: false,\n}];\n\n//funcion pura que recibe un estado inicial y una acción, debe retornar siempre un nuevo estado\nconst todoReducer =( state = initialState, action)=>{\n\n    return state;\n}\n\nlet todos = todoReducer();\n\nconst newtodo = {\n    id: 2,\n    todo: 'Reolectar la piedra del poder',\n    done: false,\n}\n\n\n\nconsole.log(todos);\n"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAG,CAAC;EAClBC,EAAE,EAAE,CADc;EAElBC,IAAI,EAAE,8BAFY;EAGlBC,IAAI,EAAE;AAHY,CAAD,CAArB,C,CAMA;;AACA,MAAMC,WAAW,GAAE,YAAiC;EAAA,IAA/BC,KAA+B,uEAAvBL,YAAuB;EAAA,IAATM,MAAS;EAEhD,OAAOD,KAAP;AACH,CAHD;;AAKA,IAAIE,KAAK,GAAGH,WAAW,EAAvB;AAEA,MAAMI,OAAO,GAAG;EACZP,EAAE,EAAE,CADQ;EAEZC,IAAI,EAAE,+BAFM;EAGZC,IAAI,EAAE;AAHM,CAAhB;AAQAM,OAAO,CAACC,GAAR,CAAYH,KAAZ"},"metadata":{},"sourceType":"module"}